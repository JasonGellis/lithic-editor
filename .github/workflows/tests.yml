name: Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
        exclude:
          # PyQt5 compatibility issues with Python 3.11 on some platforms
          - os: windows-latest
            python-version: '3.11'

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libxcb-xinerama0 libxcb-cursor0 libgl1-mesa-glx
        # Virtual display for GUI tests
        sudo apt-get install -y xvfb
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[test]"
        # Install coverage for reporting
        pip install pytest-cov
    
    - name: Run tests (Linux with virtual display)
      if: runner.os == 'Linux'
      run: |
        export QT_QPA_PLATFORM=offscreen
        xvfb-run -a pytest --cov=lithic_editor --cov-report=xml --cov-report=term-missing
    
    - name: Run tests (Windows/macOS)
      if: runner.os != 'Linux'
      run: |
        pytest --cov=lithic_editor --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.9' && matrix.os == 'ubuntu-latest'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Run linting
      run: |
        # Check code formatting
        black --check lithic_editor tests
        
        # Check code style
        flake8 lithic_editor tests
        
        # Type checking (if mypy config is working)
        # mypy lithic_editor